// Mocks generated by Mockito 5.1.0 from annotations
// in words_3000_puzzle/test/domain/usecases/categories/mock_category_repository.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:words_3000_puzzle/data/dto/category_dto.dart' as _i2;
import 'package:words_3000_puzzle/domain/repositories/category_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeCategoryDto_0 extends _i1.Fake implements _i2.CategoryDto {}

/// A class which mocks [CategoryRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryRepository extends _i1.Mock
    implements _i3.CategoryRepository {
  MockCategoryRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i2.CategoryDto> getAllCategories() =>
      (super.noSuchMethod(Invocation.method(#getAllCategories, []),
          returnValue: <_i2.CategoryDto>[]) as List<_i2.CategoryDto>);
  @override
  _i4.Future<_i2.CategoryDto> getCategory(String? id) =>
      (super.noSuchMethod(Invocation.method(#getCategory, [id]),
              returnValue: Future<_i2.CategoryDto>.value(_FakeCategoryDto_0()))
          as _i4.Future<_i2.CategoryDto>);
  @override
  _i4.Future<dynamic> addUpdateCategory(
          String? id, _i2.CategoryDto? category) =>
      (super.noSuchMethod(Invocation.method(#addUpdateCategory, [id, category]),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> deleteCategory(String? id) =>
      (super.noSuchMethod(Invocation.method(#deleteCategory, [id]),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> addCategoryWithDataFromAsset(
          String? path, _i2.CategoryDto? category) =>
      (super.noSuchMethod(
          Invocation.method(#addCategoryWithDataFromAsset, [path, category]),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
}
